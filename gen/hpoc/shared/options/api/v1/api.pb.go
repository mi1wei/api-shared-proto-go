// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: hpoc/shared/options/api/v1/api.proto

package apiv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServicePermissions struct {
	Permissions          []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServicePermissions) Reset()         { *m = ServicePermissions{} }
func (m *ServicePermissions) String() string { return proto.CompactTextString(m) }
func (*ServicePermissions) ProtoMessage()    {}
func (*ServicePermissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d8ce72692ad7e72, []int{0}
}
func (m *ServicePermissions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServicePermissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServicePermissions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ServicePermissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServicePermissions.Merge(m, src)
}
func (m *ServicePermissions) XXX_Size() int {
	return m.Size()
}
func (m *ServicePermissions) XXX_DiscardUnknown() {
	xxx_messageInfo_ServicePermissions.DiscardUnknown(m)
}

var xxx_messageInfo_ServicePermissions proto.InternalMessageInfo

func (m *ServicePermissions) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type MethodPermissions struct {
	Permissions          []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MethodPermissions) Reset()         { *m = MethodPermissions{} }
func (m *MethodPermissions) String() string { return proto.CompactTextString(m) }
func (*MethodPermissions) ProtoMessage()    {}
func (*MethodPermissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d8ce72692ad7e72, []int{1}
}
func (m *MethodPermissions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MethodPermissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MethodPermissions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MethodPermissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MethodPermissions.Merge(m, src)
}
func (m *MethodPermissions) XXX_Size() int {
	return m.Size()
}
func (m *MethodPermissions) XXX_DiscardUnknown() {
	xxx_messageInfo_MethodPermissions.DiscardUnknown(m)
}

var xxx_messageInfo_MethodPermissions proto.InternalMessageInfo

func (m *MethodPermissions) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

var E_ServicePermissions = &proto.ExtensionDesc{
	ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
	ExtensionType: (*ServicePermissions)(nil),
	Field:         80000,
	Name:          "hpoc.shared.options.api.v1.service_permissions",
	Tag:           "bytes,80000,opt,name=service_permissions",
	Filename:      "hpoc/shared/options/api/v1/api.proto",
}

var E_MethodPermissions = &proto.ExtensionDesc{
	ExtendedType:  (*descriptorpb.MethodOptions)(nil),
	ExtensionType: (*MethodPermissions)(nil),
	Field:         81000,
	Name:          "hpoc.shared.options.api.v1.method_permissions",
	Tag:           "bytes,81000,opt,name=method_permissions",
	Filename:      "hpoc/shared/options/api/v1/api.proto",
}

func init() {
	proto.RegisterType((*ServicePermissions)(nil), "hpoc.shared.options.api.v1.ServicePermissions")
	proto.RegisterType((*MethodPermissions)(nil), "hpoc.shared.options.api.v1.MethodPermissions")
	proto.RegisterExtension(E_ServicePermissions)
	proto.RegisterExtension(E_MethodPermissions)
}

func init() {
	proto.RegisterFile("hpoc/shared/options/api/v1/api.proto", fileDescriptor_1d8ce72692ad7e72)
}

var fileDescriptor_1d8ce72692ad7e72 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xbf, 0x6a, 0xdb, 0x40,
	0x00, 0xc6, 0x7d, 0xaa, 0x29, 0xad, 0x3c, 0x59, 0x5d, 0x8c, 0x07, 0x55, 0x98, 0x52, 0xbc, 0xe8,
	0x0e, 0xb5, 0xb4, 0xc3, 0x75, 0x92, 0x97, 0x9a, 0x80, 0xb1, 0xb0, 0xc1, 0x43, 0x10, 0x04, 0x59,
	0xba, 0x48, 0x07, 0x91, 0xef, 0x90, 0x64, 0x65, 0x0b, 0x21, 0x4f, 0x91, 0xac, 0x19, 0xf3, 0x24,
	0x21, 0x53, 0xc6, 0x8c, 0x41, 0x59, 0x42, 0xb6, 0x6c, 0x1e, 0xc3, 0xe9, 0x64, 0xe2, 0x44, 0xd8,
	0x90, 0x49, 0xe8, 0xfb, 0x23, 0xfd, 0xbe, 0xe3, 0xd4, 0x1f, 0x11, 0x67, 0x3e, 0x4a, 0x23, 0x2f,
	0x21, 0x01, 0x62, 0x3c, 0xa3, 0x6c, 0x91, 0x22, 0x8f, 0x53, 0x94, 0x5b, 0xe2, 0x01, 0x79, 0xc2,
	0x32, 0xa6, 0x75, 0x45, 0x0a, 0xca, 0x14, 0xac, 0x52, 0x50, 0xd8, 0xb9, 0xd5, 0x35, 0x42, 0xc6,
	0xc2, 0x23, 0x82, 0xca, 0xe4, 0x7c, 0x79, 0x88, 0x02, 0x92, 0xfa, 0x09, 0xe5, 0x19, 0x4b, 0x64,
	0xbb, 0xf7, 0x57, 0xd5, 0xa6, 0x24, 0xc9, 0xa9, 0x4f, 0x1c, 0x92, 0xc4, 0x34, 0x4d, 0x45, 0x5d,
	0x33, 0xd4, 0x16, 0x7f, 0x7d, 0xed, 0x00, 0xe3, 0x53, 0xff, 0xeb, 0x64, 0x53, 0xea, 0xfd, 0x51,
	0xdb, 0x23, 0x92, 0x45, 0x2c, 0xf8, 0x50, 0x0d, 0x9f, 0x01, 0xf5, 0x5b, 0x2a, 0xff, 0x77, 0xb0,
	0xa1, 0x6b, 0xdf, 0xa1, 0x24, 0x85, 0x6b, 0x52, 0x58, 0x51, 0x8d, 0xe5, 0xa0, 0xce, 0xe9, 0x73,
	0xd3, 0x00, 0xfd, 0xd6, 0x2f, 0x08, 0xb7, 0xcf, 0x85, 0xf5, 0x25, 0x13, 0x2d, 0xad, 0x69, 0xf8,
	0x44, 0xd5, 0xe2, 0x92, 0xfd, 0x0d, 0x82, 0x5e, 0x43, 0x90, 0x03, 0xd7, 0x04, 0x8f, 0x2b, 0x49,
	0x60, 0xee, 0x22, 0xa8, 0x9d, 0xc9, 0xa4, 0x1d, 0xbf, 0x97, 0x06, 0x17, 0xca, 0x75, 0xa1, 0x83,
	0xdb, 0x42, 0x07, 0xf7, 0x85, 0x0e, 0xce, 0x1f, 0xf4, 0x86, 0xaa, 0xfb, 0x2c, 0xde, 0xf1, 0xdd,
	0xc1, 0x17, 0x9b, 0x53, 0x47, 0x70, 0x39, 0x60, 0x7f, 0x2f, 0xa4, 0x59, 0xb4, 0x9c, 0x43, 0x9f,
	0xc5, 0x28, 0xa6, 0xd6, 0x31, 0xa1, 0xe2, 0x36, 0x98, 0xb2, 0x68, 0x96, 0xf4, 0x66, 0xc8, 0x50,
	0x48, 0x16, 0x68, 0xfb, 0x05, 0xfa, 0xe7, 0x71, 0x9a, 0x5b, 0x77, 0x00, 0xac, 0x40, 0xe3, 0x52,
	0x69, 0x0e, 0xa7, 0x63, 0xfb, 0x4a, 0xe9, 0x0e, 0x05, 0xc1, 0x54, 0x12, 0x54, 0xbb, 0xa1, 0xcd,
	0x29, 0x9c, 0x59, 0x37, 0xd2, 0x74, 0xa5, 0xe9, 0x56, 0xa6, 0x6b, 0x73, 0xea, 0xce, 0xac, 0x42,
	0xf9, 0xb9, 0xdd, 0x74, 0xff, 0x3b, 0x83, 0x11, 0xc9, 0xbc, 0xc0, 0xcb, 0xbc, 0x27, 0x45, 0x17,
	0x41, 0x8c, 0x65, 0x12, 0xe3, 0x2a, 0x8a, 0xb1, 0xcd, 0x29, 0xc6, 0x33, 0x6b, 0xfe, 0xb9, 0xe4,
	0xff, 0xfd, 0x12, 0x00, 0x00, 0xff, 0xff, 0xe5, 0xb6, 0x33, 0xd1, 0xfc, 0x02, 0x00, 0x00,
}

func (m *ServicePermissions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServicePermissions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServicePermissions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Permissions) > 0 {
		for iNdEx := len(m.Permissions) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Permissions[iNdEx])
			copy(dAtA[i:], m.Permissions[iNdEx])
			i = encodeVarintApi(dAtA, i, uint64(len(m.Permissions[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MethodPermissions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MethodPermissions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MethodPermissions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Permissions) > 0 {
		for iNdEx := len(m.Permissions) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Permissions[iNdEx])
			copy(dAtA[i:], m.Permissions[iNdEx])
			i = encodeVarintApi(dAtA, i, uint64(len(m.Permissions[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ServicePermissions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Permissions) > 0 {
		for _, s := range m.Permissions {
			l = len(s)
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MethodPermissions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Permissions) > 0 {
		for _, s := range m.Permissions {
			l = len(s)
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ServicePermissions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServicePermissions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServicePermissions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Permissions = append(m.Permissions, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MethodPermissions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MethodPermissions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MethodPermissions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Permissions = append(m.Permissions, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
