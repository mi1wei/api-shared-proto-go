// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: hpoc/shared/types/request/v1/create.proto

package requestv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Create struct {
	// only validate, dont create the resource
	DryRun bool `protobuf:"varint,1,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	// unique id (uuidv4) for the server, to detect duplicate requests.
	// client only generates a new uuid
	// server handles duplicate detection
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// do not return the result
	SkipResult           bool     `protobuf:"varint,3,opt,name=skip_result,json=skipResult,proto3" json:"skip_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Create) Reset()         { *m = Create{} }
func (m *Create) String() string { return proto.CompactTextString(m) }
func (*Create) ProtoMessage()    {}
func (*Create) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1dfaf3f9d19eb2c, []int{0}
}
func (m *Create) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Create) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Create.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Create) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Create.Merge(m, src)
}
func (m *Create) XXX_Size() int {
	return m.Size()
}
func (m *Create) XXX_DiscardUnknown() {
	xxx_messageInfo_Create.DiscardUnknown(m)
}

var xxx_messageInfo_Create proto.InternalMessageInfo

func (m *Create) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

func (m *Create) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Create) GetSkipResult() bool {
	if m != nil {
		return m.SkipResult
	}
	return false
}

func init() {
	proto.RegisterType((*Create)(nil), "hpoc.shared.types.request.v1.Create")
}

func init() {
	proto.RegisterFile("hpoc/shared/types/request/v1/create.proto", fileDescriptor_e1dfaf3f9d19eb2c)
}

var fileDescriptor_e1dfaf3f9d19eb2c = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xb1, 0x4e, 0xeb, 0x30,
	0x18, 0x85, 0xeb, 0xdc, 0xab, 0x42, 0xdd, 0x2d, 0x0b, 0x1d, 0x4a, 0x88, 0x98, 0xca, 0x50, 0x5b,
	0x16, 0x9b, 0xd9, 0xca, 0x40, 0x19, 0x90, 0xa2, 0xb4, 0xea, 0x80, 0x22, 0x55, 0x6e, 0x6c, 0xb5,
	0x16, 0xb4, 0x0e, 0x8e, 0x53, 0xd4, 0x37, 0x61, 0x66, 0x44, 0x3c, 0x08, 0x62, 0x62, 0x64, 0x44,
	0x61, 0xe3, 0x09, 0x18, 0x51, 0x6c, 0xcf, 0xdd, 0xac, 0xff, 0x7c, 0x47, 0xfa, 0x8e, 0xe1, 0xd9,
	0xaa, 0x50, 0x39, 0x2e, 0x57, 0x4c, 0x0b, 0x8e, 0xcd, 0xae, 0x10, 0x25, 0xd6, 0xe2, 0xa1, 0x12,
	0xa5, 0xc1, 0x5b, 0x82, 0x73, 0x2d, 0x98, 0x11, 0xa8, 0xd0, 0xca, 0xa8, 0xb0, 0xdf, 0xa0, 0xc8,
	0xa1, 0xc8, 0xa2, 0xc8, 0xa3, 0x68, 0x4b, 0x4e, 0x19, 0x6c, 0x5f, 0x5a, 0x3a, 0x3c, 0x82, 0x07,
	0x5c, 0xef, 0xe6, 0xba, 0xda, 0xf4, 0x40, 0x0c, 0x06, 0x87, 0x69, 0x9b, 0xeb, 0x5d, 0x5a, 0x6d,
	0xc2, 0x63, 0x08, 0x7d, 0x61, 0x2e, 0x79, 0x2f, 0x88, 0xc1, 0xa0, 0x93, 0x76, 0xfc, 0xe5, 0x9a,
	0x87, 0x27, 0xb0, 0x5b, 0xde, 0xc9, 0x62, 0xae, 0x45, 0x59, 0xdd, 0x9b, 0xde, 0x3f, 0xdb, 0x85,
	0xcd, 0x29, 0xb5, 0x97, 0xd1, 0x6b, 0xf0, 0x56, 0x47, 0xe0, 0xa3, 0x8e, 0xc0, 0x57, 0x1d, 0x81,
	0xa7, 0xef, 0xa8, 0x05, 0xe3, 0x5c, 0xad, 0xd1, 0x3e, 0xaf, 0x51, 0xd7, 0x59, 0x25, 0xcd, 0x84,
	0x04, 0xdc, 0x26, 0x4b, 0x69, 0x56, 0xd5, 0x02, 0xe5, 0x6a, 0x8d, 0xd7, 0x92, 0x3c, 0x0a, 0x89,
	0x59, 0x21, 0x87, 0xae, 0x3d, 0xb4, 0x43, 0x87, 0x4b, 0x85, 0x97, 0x62, 0x83, 0xf7, 0xfd, 0xcc,
	0x85, 0x7f, 0x6e, 0xc9, 0x27, 0x00, 0xbf, 0xa0, 0xf5, 0x1c, 0xfc, 0x1f, 0x4f, 0xa6, 0xe9, 0x4b,
	0xd0, 0x1f, 0x37, 0x32, 0x13, 0x27, 0x33, 0xb5, 0x32, 0xa9, 0x97, 0x99, 0x91, 0x77, 0x17, 0x67,
	0x2e, 0xce, 0x6c, 0x9c, 0xf9, 0x38, 0x9b, 0x91, 0x3a, 0x18, 0xec, 0x8b, 0xb3, 0xab, 0x64, 0x74,
	0x23, 0x0c, 0xe3, 0xcc, 0xb0, 0x9f, 0x20, 0x6e, 0x50, 0x4a, 0x1d, 0x4b, 0xa9, 0x85, 0x29, 0xf5,
	0x34, 0xa5, 0x33, 0xb2, 0x68, 0xdb, 0x35, 0xe7, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x4b,
	0x5e, 0x77, 0xe3, 0x01, 0x00, 0x00,
}

func (m *Create) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Create) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Create) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SkipResult {
		i--
		if m.SkipResult {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.RequestId) > 0 {
		i -= len(m.RequestId)
		copy(dAtA[i:], m.RequestId)
		i = encodeVarintCreate(dAtA, i, uint64(len(m.RequestId)))
		i--
		dAtA[i] = 0x12
	}
	if m.DryRun {
		i--
		if m.DryRun {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintCreate(dAtA []byte, offset int, v uint64) int {
	offset -= sovCreate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Create) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DryRun {
		n += 2
	}
	l = len(m.RequestId)
	if l > 0 {
		n += 1 + l + sovCreate(uint64(l))
	}
	if m.SkipResult {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCreate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCreate(x uint64) (n int) {
	return sovCreate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Create) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCreate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Create: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Create: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DryRun", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DryRun = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkipResult", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SkipResult = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCreate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCreate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCreate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCreate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCreate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCreate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCreate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCreate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCreate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCreate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCreate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCreate = fmt.Errorf("proto: unexpected end of group")
)
