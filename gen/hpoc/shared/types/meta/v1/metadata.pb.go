// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: hpoc/shared/types/meta/v1/metadata.proto

package metav1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Meta struct {
	// Time the object was created
	CreatedTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// Time the object last updated
	UpdatedTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
	// Time the object was deleted (soft-delete)
	DeletedTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=deleted_time,json=deletedTime,proto3" json:"deleted_time,omitempty"`
	// Resource version (increments by 1 on every update)
	Version              int64    `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_cad18f783defeb53, []int{0}
}
func (m *Meta) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(m, src)
}
func (m *Meta) XXX_Size() int {
	return m.Size()
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Meta) GetCreatedTime() *timestamppb.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *Meta) GetUpdatedTime() *timestamppb.Timestamp {
	if m != nil {
		return m.UpdatedTime
	}
	return nil
}

func (m *Meta) GetDeletedTime() *timestamppb.Timestamp {
	if m != nil {
		return m.DeletedTime
	}
	return nil
}

func (m *Meta) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterType((*Meta)(nil), "hpoc.shared.types.meta.v1.Meta")
}

func init() {
	proto.RegisterFile("hpoc/shared/types/meta/v1/metadata.proto", fileDescriptor_cad18f783defeb53)
}

var fileDescriptor_cad18f783defeb53 = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x31, 0x4b, 0xc3, 0x40,
	0x18, 0x86, 0x7b, 0x69, 0x51, 0x48, 0x75, 0xe9, 0xd4, 0x16, 0x1a, 0x8b, 0x20, 0x74, 0xe9, 0x1d,
	0xa7, 0xdb, 0x89, 0x4b, 0x17, 0x8b, 0x50, 0x28, 0x6d, 0xe9, 0x20, 0x01, 0xb9, 0x26, 0x9f, 0x69,
	0xa0, 0xe9, 0x85, 0xe4, 0x1a, 0xf1, 0x9f, 0xe8, 0xea, 0xe8, 0x2f, 0x11, 0x27, 0x47, 0x17, 0x41,
	0xe2, 0xe6, 0x2f, 0x70, 0x94, 0xbb, 0x4b, 0x74, 0x2a, 0x9d, 0x8e, 0xe4, 0x7d, 0x9e, 0xef, 0x5e,
	0xbe, 0xb3, 0x7b, 0xcb, 0x58, 0x78, 0x24, 0x5d, 0xf2, 0x04, 0x7c, 0x22, 0xef, 0x63, 0x48, 0x49,
	0x04, 0x92, 0x93, 0x8c, 0xea, 0xd3, 0xe7, 0x92, 0xe3, 0x38, 0x11, 0x52, 0x34, 0x5a, 0x8a, 0xc4,
	0x86, 0xc4, 0x9a, 0xc4, 0x8a, 0xc0, 0x19, 0x6d, 0x1f, 0x05, 0x42, 0x04, 0x2b, 0x20, 0x1a, 0x5c,
	0x6c, 0x6e, 0x89, 0x0c, 0x23, 0x48, 0x25, 0x8f, 0x62, 0xe3, 0x1e, 0x7f, 0x20, 0xbb, 0x36, 0x02,
	0xc9, 0x1b, 0x17, 0xf6, 0x81, 0x97, 0x00, 0x97, 0xe0, 0xdf, 0x28, 0xa6, 0x89, 0xba, 0xa8, 0x57,
	0x3f, 0x6d, 0x63, 0x33, 0x00, 0x97, 0x03, 0xf0, 0xac, 0x1c, 0x30, 0xa9, 0x17, 0xbc, 0xfa, 0xa3,
	0xf4, 0x4d, 0xec, 0xff, 0xeb, 0xd6, 0x6e, 0xbd, 0xe0, 0x4b, 0xdd, 0x87, 0x15, 0xfc, 0xe9, 0xd5,
	0xdd, 0x7a, 0xc1, 0x6b, 0xbd, 0x69, 0xef, 0x67, 0x90, 0xa4, 0xa1, 0x58, 0x37, 0x6b, 0x5d, 0xd4,
	0xab, 0x4e, 0xca, 0xcf, 0xc1, 0xa3, 0xf5, 0x92, 0x3b, 0xe8, 0x2d, 0x77, 0xd0, 0x67, 0xee, 0xa0,
	0x87, 0x2f, 0xa7, 0x62, 0x77, 0x3c, 0x11, 0xe1, 0xad, 0x2b, 0x1b, 0x1c, 0x8e, 0x8a, 0xed, 0x8e,
	0xd5, 0xa5, 0x63, 0x74, 0x7d, 0x15, 0x84, 0x72, 0xb9, 0x59, 0x60, 0x4f, 0x44, 0x24, 0x0a, 0xe9,
	0x1d, 0x84, 0x84, 0xc7, 0x61, 0xdf, 0xc8, 0x7d, 0x5d, 0xad, 0x1f, 0x08, 0x12, 0xc0, 0x9a, 0x6c,
	0x7d, 0xb2, 0x73, 0x75, 0x66, 0xf4, 0x1d, 0xa1, 0x1f, 0x54, 0x79, 0xb2, 0x6a, 0xc3, 0xe9, 0x6c,
	0xf4, 0x6c, 0xb5, 0x86, 0xaa, 0xc5, 0xd4, 0xb4, 0x98, 0xe9, 0x16, 0xea, 0x72, 0x3c, 0xa7, 0xaf,
	0x26, 0x73, 0x4d, 0xe6, 0xea, 0xcc, 0x55, 0x99, 0x3b, 0xa7, 0xb9, 0x75, 0xb2, 0x35, 0x73, 0x2f,
	0xc7, 0x83, 0xb2, 0xff, 0xb7, 0xd5, 0x51, 0x1c, 0x63, 0x06, 0x64, 0x4c, 0x93, 0x8c, 0xa9, 0x9c,
	0xb1, 0x39, 0x5d, 0xec, 0xe9, 0xee, 0x67, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1d, 0xc0, 0xa3,
	0xbf, 0x6a, 0x02, 0x00, 0x00,
}

func (m *Meta) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Meta) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Meta) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Version != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x20
	}
	if m.DeletedTime != nil {
		{
			size, err := m.DeletedTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.UpdatedTime != nil {
		{
			size, err := m.UpdatedTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.CreatedTime != nil {
		{
			size, err := m.CreatedTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMetadata(dAtA []byte, offset int, v uint64) int {
	offset -= sovMetadata(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Meta) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CreatedTime != nil {
		l = m.CreatedTime.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.UpdatedTime != nil {
		l = m.UpdatedTime.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.DeletedTime != nil {
		l = m.DeletedTime.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.Version != 0 {
		n += 1 + sovMetadata(uint64(m.Version))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMetadata(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMetadata(x uint64) (n int) {
	return sovMetadata(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Meta) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Meta: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Meta: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedTime == nil {
				m.CreatedTime = &timestamppb.Timestamp{}
			}
			if err := m.CreatedTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedTime == nil {
				m.UpdatedTime = &timestamppb.Timestamp{}
			}
			if err := m.UpdatedTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeletedTime == nil {
				m.DeletedTime = &timestamppb.Timestamp{}
			}
			if err := m.DeletedTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMetadata(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMetadata
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMetadata
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMetadata
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMetadata        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMetadata          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMetadata = fmt.Errorf("proto: unexpected end of group")
)
